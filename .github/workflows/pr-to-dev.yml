name: Pull Request to Dev

on:
  pull_request:
    branches:
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Vérifier le code
    - name: Checkout Code
      uses: actions/checkout@v4

    # Installer Docker compose
    - name: Install Docker compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    # Configurer DVC avec l'action officielle
    - name: Setup DVC
      uses: iterative/setup-dvc@v2

    # Init un dépôt DVC
    - name: Check DVC Repository
      run: |
        dvc init --no-scm

    # Configurer le remote Azure pour DVC
    - name: Configure DVC Azure Remote
      run: |
        dvc remote add -d azure-remote azure://${{ secrets.AZURE_BLOB_STORAGE }}
        dvc remote modify azure-remote account_name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
        dvc remote modify azure-remote account_key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}

    # Pull le modèle via DVC
    - name: Pull Gradient Boosting Model
      run: |
        dvc pull app/backend/model/gradient_boosting.pkl.dvc

    # Construire et démarrer les conteneurs avec docker-compose
    - name: Start Flask App with Docker Compose
      run: |
        cd app/
        docker-compose up -d

    # Attendre que l'application soit prête
    - name: Wait for Flask App to be Ready
      run: |
        until curl -X GET http://localhost/api/; do
          echo "Waiting for Flask app to start...";
          sleep 5;
        done

    # Exécuter les tests Flask à l'intérieur du conteneur
    - name: Run Integration Tests
      run: |
        docker exec ml_ops_rest_server pytest tests/

    # Arrêter et nettoyer les conteneurs après les tests
    - name: Clean Up Docker Containers
      run: |
        cd app/
        docker-compose down
